package net.viralpatel.servlet.filters;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.charset.StandardCharsets;

import org.json.JSONArray;
import org.json.JSONObject;
import org.json.JSONTokener;

public class Utils {
	
	/**
	 * Funtion to consume Restful Web Services that generate the JWT
	 * @param user
	 * @param password
	 * @return JWT
	 */
	static public String getTokenJWT(String user, String password)
	{
		
		URL url;
		BufferedReader br;
		StringBuilder builder;
		HttpURLConnection conn;
		
		String Uri = "http://localhost:8080/ontogov/r/webservicesjwt/getJWT_Token/"
				+ user
				+ "/"
				+ password;
		
		try {
			
			url = new URL(Uri);
			conn = (HttpURLConnection) url.openConnection();
			
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Accept", "application/json");
			
			if (conn.getResponseCode() != 200) {
				throw new RuntimeException("Failed : HTTP error code : "  + conn.getResponseCode());
			}

			br = new BufferedReader(new InputStreamReader((conn.getInputStream())));

		    builder = new StringBuilder();
			
			for (String line = null; (line = br.readLine()) != null;) {
			    builder.append(line).append("\n");
			}
			
			JSONObject json = new JSONObject(builder.toString());
			JSONObject jsonf = (JSONObject) json.get("map");
			
			
			conn.disconnect();
		
			return jsonf.getString("JWT");
		
		} catch (Exception e) {

			e.printStackTrace();
			return null;
		}		
	}
	
	/**
	 * 
	 * @param token
	 * @return
	 */
	static public boolean validateToken(String token)
	{

	    URL url;
	    HttpURLConnection connection = null;  
	    
	    String Uri = "http://localhost:8080/ontogov/r/webservicesjwt/validateJWT_Token";
	    
	    String urlParameters = "{\"token\":\""  + token + "\"}";
	    
	    
	    try {
	      //Create connection
	      url = new URL(Uri);
	      connection = (HttpURLConnection)url.openConnection();
	      connection.setRequestMethod("POST");
	      connection.setRequestProperty("Accept", "application/json");
				
	      connection.setRequestProperty("Content-Length", "" +  Integer.toString(urlParameters.getBytes().length));
	      connection.setRequestProperty("Content-Language", "en-US");  
				
	      connection.setUseCaches (false);
	      connection.setDoInput(true);
	      connection.setDoOutput(true);

	      //Send request
	      DataOutputStream wr = new DataOutputStream (connection.getOutputStream ());
	      wr.writeBytes (urlParameters);
	      wr.flush ();
	      wr.close ();

	      //Get Response	
	      InputStream is = connection.getInputStream();
	      BufferedReader rd = new BufferedReader(new InputStreamReader(is));
	      String line;
	      StringBuffer response = new StringBuffer(); 
	      while((line = rd.readLine()) != null) {
	        response.append(line);
	        response.append('\r');
	      }
	      rd.close();
	      
	      return true;

	    } catch (Exception e) {

	      e.printStackTrace();
	      return false;

	    } finally {

	      if(connection != null) {
	        connection.disconnect(); 
	      }
	    }
		
		
	}

}
